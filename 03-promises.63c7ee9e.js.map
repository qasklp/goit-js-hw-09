{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACaC,KAAKC,SAAW,GAEpCJ,EAAQ,CAACH,WAAUC,eAEnBG,EAAO,CAACJ,WAAUC,c,GAEnBA,E,IAIP,IAAMO,EAAOC,SAASC,cAAc,QACxBD,SAASC,cAAc,UAEnCF,EAAKG,iBAAiB,UAEtB,SAAsBC,GACpBA,EAAMC,iBASN,IARA,IAEuBC,EAAnBF,EAAMG,cADRC,SAAYC,EAAKH,EAALG,MAAOC,EAAIJ,EAAJI,KAAMC,EAAML,EAANK,OAGvBC,EAAaC,OAAOJ,EAAMK,OACxBC,EAAYF,OAAOH,EAAKI,OACxBE,EAAcH,OAAOF,EAAOG,OAEzBG,EAAW,EAAGA,GAAYD,EAAaC,GAAY,EAC1D1B,EAAc0B,EAAUL,GACrBM,MAAK,SAAAC,G,IAAG3B,EAAQ2B,EAAR3B,SAAUC,EAAU0B,EAAV1B,WACjB2B,QAAQC,IAAI,uBAAwCC,OAAf9B,EAAS,QAAiB8B,OAAX7B,EAAW,OAC/D8B,EAAAlC,GAASmC,OAAOC,QAAQ,uBAAwCH,OAAf9B,EAAS,QAAiB8B,OAAX7B,EAAW,M,IAE5EiC,OAAM,SAAAP,G,IAAG3B,EAAQ2B,EAAR3B,SAAUC,EAAU0B,EAAV1B,WAClB2B,QAAQC,IAAI,sBAAuCC,OAAf9B,EAAS,QAAiB8B,OAAX7B,EAAW,OAC9D8B,EAAAlC,GAASmC,OAAOG,QAAQ,sBAAqCL,OAAf9B,EAAS,QAAiB8B,OAAX7B,EAAW,M,IAE5EmB,GAAcG,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from \"notiflix\";\n\nfunction createPromise(position, delayValue) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({position, delayValue});\n      } else {\n        reject({position, delayValue});\n      }\n    }, delayValue);  \n  });\n}\n\nconst form = document.querySelector('form');\nconst btn = document.querySelector('button');\n\nform.addEventListener(\"submit\", handleSubmit);\n\nfunction handleSubmit(event) {\n  event.preventDefault();\n  const {\n    elements: { delay, step, amount}\n  } = event.currentTarget;\n\n  let delayValue = Number(delay.value);\n  const stepValue = Number(step.value);\n  const amountValue = Number(amount.value);\n\n  for (let position = 1; position <= amountValue; position += 1){\n    createPromise(position, delayValue)\n      .then(({ position, delayValue }) => {\n        console.log(`✅ Fulfilled promise ${position} in ${delayValue}ms`);\n        Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delayValue}ms`);\n      })\n      .catch(({ position, delayValue }) => {\n        console.log(`❌ Rejected promise ${position} in ${delayValue}ms`);\n        Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delayValue}ms`);\n      });\n    delayValue += stepValue;\n  }\n  \n}\n\n"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delayValue","Promise","resolve","reject","setTimeout","Math","random","$ce04d3a99e08e73b$var$form","document","querySelector","addEventListener","event","preventDefault","_elements","currentTarget","elements","delay","step","amount","delayValue1","Number","value","stepValue","amountValue","position1","then","param","console","log","concat","$parcel$interopDefault","Notify","success","catch","failure"],"version":3,"file":"03-promises.63c7ee9e.js.map"}